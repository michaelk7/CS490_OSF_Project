# Generated by Django 4.1.5 on 2023-03-22 19:33

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        (
            "playground",
            "0003_alter_dkadata_absence_of_any_risk_factor_for_acute_kidney_injury_and_more",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="SavedData",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                (
                    "Age",
                    models.IntegerField(blank=True, db_column="Age (years)", null=True),
                ),
                (
                    "Weight",
                    models.FloatField(blank=True, db_column="Weight (kg)", null=True),
                ),
                (
                    "BMI",
                    models.FloatField(blank=True, db_column="BMI (kg/m2)", null=True),
                ),
                (
                    "Diabetes_Type",
                    models.CharField(
                        choices=[("0", "Type 1"), ("1", "Type 2")],
                        db_column="Diabetes Type (type 1 = 0, type 2 = 1)",
                        default="Type 1",
                        max_length=1,
                    ),
                ),
                (
                    "Gender",
                    models.CharField(
                        choices=[("0", "Male"), ("1", "Female")],
                        db_column="Gender (0 = male, 1 = female)",
                        default="Male",
                        max_length=1,
                    ),
                ),
                (
                    "Medical_Unit",
                    models.CharField(
                        choices=[("0", "Medical ICU"), ("1", "Intermediate Care")],
                        db_column="Unit (0 = Medical ICU, 1 = Intermediate Care)",
                        default="Medical ICU",
                        max_length=1,
                    ),
                ),
                (
                    "Apache_II_Score",
                    models.IntegerField(
                        blank=True, db_column="APACHE II Score", null=True
                    ),
                ),
                (
                    "Admission_Chloride",
                    models.IntegerField(
                        blank=True, db_column="Admission Chloride (mEq/L)", null=True
                    ),
                ),
                (
                    "Peak_Chloride",
                    models.IntegerField(
                        blank=True, db_column="Peak Chloride (mEq/L)", null=True
                    ),
                ),
                (
                    "Peak_Chloride_Category",
                    models.CharField(
                        choices=[("0", "Normochloremia"), ("1", "Hyperchloremia")],
                        db_column="Peak Chloride Category (0 = normochloremia, 1 = hyperchloremia)",
                        default="Normochloremia",
                        max_length=1,
                    ),
                ),
                (
                    "Admission_Bicarbonate",
                    models.IntegerField(
                        blank=True, db_column="Admission Bicarbonate (mEq/L)", null=True
                    ),
                ),
                (
                    "Bicarbonate_Nadir",
                    models.IntegerField(
                        blank=True, db_column="Bicarbonate nadir (mEq/L)", null=True
                    ),
                ),
                (
                    "Baseline_Serum_Creatinine",
                    models.FloatField(
                        blank=True,
                        db_column="Baseline Serum Creatinine (mg/dL)",
                        null=True,
                    ),
                ),
                (
                    "Admission_Serum_Creatinine",
                    models.FloatField(
                        blank=True,
                        db_column="Admission Serum Creatinine (mg/dL)",
                        null=True,
                    ),
                ),
                (
                    "Peak_Serum_Creatinine",
                    models.FloatField(
                        blank=True, db_column="Peak Serum Creatinine (mg/dL)", null=True
                    ),
                ),
                (
                    "Admission_Serum_pH",
                    models.FloatField(
                        blank=True, db_column="Admission Serum pH", null=True
                    ),
                ),
                (
                    "Serum_pH_Nadir",
                    models.FloatField(
                        blank=True, db_column="Serum pH Nadir ", null=True
                    ),
                ),
                (
                    "Admission_Glucose",
                    models.IntegerField(
                        blank=True, db_column="Admission Glucose (mg/dL)", null=True
                    ),
                ),
                (
                    "Glucose_Peak",
                    models.IntegerField(
                        blank=True, db_column="Glucose Peak (mg/dL)", null=True
                    ),
                ),
                (
                    "Glucose_Nadir",
                    models.IntegerField(
                        blank=True, db_column="Glucose Nadir (mg/dL)", null=True
                    ),
                ),
                (
                    "Anion_Gap",
                    models.IntegerField(
                        blank=True, db_column="Anion Gap (mEq/L)", null=True
                    ),
                ),
                (
                    "Delta_Gap",
                    models.IntegerField(
                        blank=True, db_column="Delta Gap (mEq/L)", null=True
                    ),
                ),
                (
                    "Non_Anion_Gap_Acidosis",
                    models.CharField(
                        choices=[("0", "No"), ("1", "Yes")],
                        db_column="Non-anion Gap Acidosis (0 = no, 1 = yes) ",
                        default="No",
                        max_length=1,
                    ),
                ),
                (
                    "Volume_Of_PlasmaLyte",
                    models.IntegerField(
                        blank=True, db_column="Volume of Plasma-Lyte (mL)", null=True
                    ),
                ),
                (
                    "Total_IV_Fluid_Volume",
                    models.FloatField(
                        blank=True, db_column="Total IV Fluid Volume (mL)", null=True
                    ),
                ),
                (
                    "Time_To_Final_DKA_Resolution",
                    models.FloatField(
                        blank=True,
                        db_column="Time to Final DKA Resolution (hours)",
                        null=True,
                    ),
                ),
                (
                    "Time_To_Initial_DKA_Resolution",
                    models.FloatField(
                        blank=True,
                        db_column="Time to Initial DKA Resolution (hours)",
                        null=True,
                    ),
                ),
                (
                    "Hospital_Length_Of_Stay",
                    models.FloatField(
                        blank=True,
                        db_column="Hospital Length of Stay (hours)",
                        null=True,
                    ),
                ),
                (
                    "Acute_Kidney_Injury_On_Admission",
                    models.CharField(
                        choices=[("0", "No"), ("1", "Yes")],
                        db_column="Acute Kidney Injury on Admission (0 = no, 1 yes)",
                        default="No",
                        max_length=1,
                    ),
                ),
                (
                    "Acute_Kidney_Injury_In_Hospital",
                    models.CharField(
                        choices=[("0", "No"), ("1", "Yes")],
                        db_column="Acute Kidney Injury In Hospital (0 = no, 1 yes)",
                        default="No",
                        max_length=1,
                    ),
                ),
                (
                    "Noncompliance_To_Insulin_At_Home",
                    models.CharField(
                        choices=[("0", "No"), ("1", "Yes")],
                        db_column="Noncompliance to Insulin at Home (0 = no, 1 = yes)",
                        default="No",
                        max_length=1,
                    ),
                ),
                (
                    "Infection_As_Cause_Of_DKA",
                    models.CharField(
                        choices=[("0", "No"), ("1", "Yes")],
                        db_column="Infection as Cause of DKA (0 = no, 1 = yes)",
                        default="No",
                        max_length=1,
                    ),
                ),
                (
                    "New_Onset_Diabetes",
                    models.CharField(
                        choices=[("0", "No"), ("1", "Yes")],
                        db_column="New Onset Diabetes (0 = no, 1 = yes)",
                        default="No",
                        max_length=1,
                    ),
                ),
                (
                    "Other_Cause_Of_DKA",
                    models.CharField(
                        choices=[("0", "No"), ("1", "Yes")],
                        db_column="Other Cause of DKA (0 = no, 1 = yes)",
                        default="No",
                        max_length=1,
                    ),
                ),
                (
                    "Sepsis",
                    models.CharField(
                        choices=[("0", "No"), ("1", "Yes")],
                        db_column="Sepsis (0 = no, 1 = yes)",
                        default="No",
                        max_length=1,
                    ),
                ),
                (
                    "Hypotension",
                    models.CharField(
                        choices=[("0", "No"), ("1", "Yes")],
                        db_column="Hypotension (0 = no, 1 = yes)",
                        default="No",
                        max_length=1,
                    ),
                ),
                (
                    "Contrast_Media_Adminsitered",
                    models.CharField(
                        choices=[("0", "No"), ("1", "Yes")],
                        db_column="Contrast Media Adminsitered (0 = no, 1 = yes)",
                        default="No",
                        max_length=1,
                    ),
                ),
                (
                    "NSAID_Administration",
                    models.CharField(
                        choices=[("0", "No"), ("1", "Yes")],
                        db_column="NSAID Administration (0 = no, 1 = yes)",
                        default="No",
                        max_length=1,
                    ),
                ),
                (
                    "Vancomycin_Aministration",
                    models.CharField(
                        choices=[("0", "No"), ("1", "Yes")],
                        db_column="Vancomycin Aministration (0 = no, 1 = yes)",
                        default="No",
                        max_length=1,
                    ),
                ),
                (
                    "Absence_Of_Any_Risk_Factor_For_Acute_Kidney_Injury",
                    models.CharField(
                        choices=[("0", "No"), ("1", "Yes")],
                        db_column="Absence of Any Risk Factor for Acute Kidney Injury (0 = no, 1 = yes)",
                        default="No",
                        max_length=1,
                    ),
                ),
                (
                    "Inappropriate_Bicarbonate_Use",
                    models.CharField(
                        choices=[("0", "No"), ("1", "Yes")],
                        db_column="Inappropriate Bicarbonate Use (0 = no, 1 = yes)",
                        default="No",
                        max_length=1,
                    ),
                ),
                (
                    "Serum_Potassium_Maintenane_Within_Normal_Range",
                    models.CharField(
                        choices=[("0", "No"), ("1", "Yes")],
                        db_column="Serum Potassium Maintenane Within Normal Range (0 = no, 1 = yes)",
                        default="No",
                        max_length=1,
                    ),
                ),
                (
                    "Subcutaneous_Insulin_Overlap_By_1_To_2_Hours",
                    models.CharField(
                        choices=[("0", "No"), ("1", "Yes")],
                        db_column="Subcutaneous Insulin Overlap by 1-2 hr (0 = no, 1 = yes)",
                        default="No",
                        max_length=1,
                    ),
                ),
            ],
            options={
                "db_table": "Saved_Data",
            },
        ),
    ]
